/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
	_type: 'sanity.imagePaletteSwatch';
	background?: string;
	foreground?: string;
	population?: number;
	title?: string;
};

export type SanityImagePalette = {
	_type: 'sanity.imagePalette';
	darkMuted?: SanityImagePaletteSwatch;
	lightVibrant?: SanityImagePaletteSwatch;
	darkVibrant?: SanityImagePaletteSwatch;
	vibrant?: SanityImagePaletteSwatch;
	dominant?: SanityImagePaletteSwatch;
	lightMuted?: SanityImagePaletteSwatch;
	muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
	_type: 'sanity.imageDimensions';
	height?: number;
	width?: number;
	aspectRatio?: number;
};

export type SanityFileAsset = {
	_id: string;
	_type: 'sanity.fileAsset';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	originalFilename?: string;
	label?: string;
	title?: string;
	description?: string;
	altText?: string;
	sha1hash?: string;
	extension?: string;
	mimeType?: string;
	size?: number;
	assetId?: string;
	uploadId?: string;
	path?: string;
	url?: string;
	source?: SanityAssetSourceData;
};

export type Geopoint = {
	_type: 'geopoint';
	lat?: number;
	lng?: number;
	alt?: number;
};

export type NewsArticlePage = {
	_id: string;
	_type: 'news.article.page';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title: string;
	subtitle: string;
	intro?: string;
	contactPersons: Array<{
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		_key: string;
		[internalGroqTypeReferenceTo]?: 'person';
	}>;
};

export type Spacer = {
	_type: 'spacer';
	size?: 'small' | 'medium' | 'large';
};

export type Grid = {
	_type: 'grid';
	title?: string;
	columns: Columns;
	items?: Array<
		| {
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
				};
				hotspot?: SanityImageHotspot;
				crop?: SanityImageCrop;
				alt: string;
				_type: 'mainImage';
				_key: string;
		  }
		| ({
				_key: string;
		  } & BlockContent)
	>;
};

export type Blockquote = {
	_type: 'blockquote';
	quote?: string;
	author?: string;
};

export type Stats = {
	_type: 'stats';
	title: string;
	value: string;
	suffix?: string;
};

export type Link = {
	_type: 'link';
	href?: string;
};

export type InternalLink = {
	_type: 'internalLink';
	title?: string;
	link?:
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'news.article';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'home';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'aboutUs';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'contact';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'groupsPage';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'imprint';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'membership';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'news.overview';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'privacy';
		  }
		| {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'singleGroupPage';
		  };
};

export type SingleGroupPage = {
	_id: string;
	_type: 'singleGroupPage';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	content?: {
		gallerySection?: {
			title: string;
			subtitle: string;
			intro?: string;
			images?: Array<{
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
				};
				hotspot?: SanityImageHotspot;
				crop?: SanityImageCrop;
				alt: string;
				_type: 'extendedImage';
				_key: string;
			}>;
		};
		contactPersonsSection: {
			title: string;
			subtitle: string;
			intro?: string;
			contactPersons: Array<{
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				_key: string;
				[internalGroqTypeReferenceTo]?: 'person';
			}>;
		};
	};
};

export type Privacy = {
	_id: string;
	_type: 'privacy';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	introText?: SimpleBlockContent;
	address: string;
	phone?: string;
	email: string;
	content?: BlockContent;
};

export type BlockContent = {
	_type: 'blockContent';
	text?: Array<
		| {
				children?: Array<{
					marks?: Array<string>;
					text?: string;
					_type: 'span';
					_key: string;
				}>;
				style?: 'normal' | 'h2' | 'h3' | 'blockquote';
				listItem?: 'bullet' | 'number';
				markDefs?: Array<
					{
						_key: string;
					} & Link
				>;
				level?: number;
				_type: 'block';
				_key: string;
		  }
		| {
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
				};
				hotspot?: SanityImageHotspot;
				crop?: SanityImageCrop;
				alt: string;
				_type: 'customImage';
				_key: string;
		  }
	>;
};

export type NewsOverview = {
	_id: string;
	_type: 'news.overview';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	contactPersons: Array<{
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		_key: string;
		[internalGroqTypeReferenceTo]?: 'person';
	}>;
};

export type Membership = {
	_id: string;
	_type: 'membership';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	contactPersons: Array<{
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		_key: string;
		[internalGroqTypeReferenceTo]?: 'person';
	}>;
};

export type Imprint = {
	_id: string;
	_type: 'imprint';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	address: string;
	registerNo?: string;
	registerCourt?: string;
	represented?: string;
	phone?: string;
	email: string;
	responsible?: string;
	arbitrationBoard?: string;
	technicalQuestionsName?: string;
	technicalQuestionsEmail?: string;
	support?: SimpleBlockContent;
};

export type GroupsPage = {
	_id: string;
	_type: 'groupsPage';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	content?: {
		groupsSection?: {
			title: string;
			subtitle: string;
			intro?: string;
		};
		statsSection: {
			stats: Array<
				{
					_key: string;
				} & Stats
			>;
		};
		venuesSection?: {
			title: string;
			subtitle: string;
			intro?: string;
			venues?: Array<{
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				_key: string;
				[internalGroqTypeReferenceTo]?: 'venue';
			}>;
		};
		contactPersonsSection: {
			title: string;
			subtitle: string;
			intro?: string;
			contactPersons: Array<{
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				_key: string;
				[internalGroqTypeReferenceTo]?: 'person';
			}>;
		};
	};
};

export type Contact = {
	_id: string;
	_type: 'contact';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	contactTo: Array<
		{
			_key: string;
		} & ContactNameMail
	>;
	contactPersons: Array<{
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		_key: string;
		[internalGroqTypeReferenceTo]?: 'person';
	}>;
};

export type AboutUs = {
	_id: string;
	_type: 'aboutUs';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	content: {
		gallerySection?: {
			title: string;
			subtitle: string;
			intro?: string;
			images?: Array<{
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
				};
				hotspot?: SanityImageHotspot;
				crop?: SanityImageCrop;
				alt: string;
				_type: 'extendedImage';
				_key: string;
			}>;
		};
		chronicleSection?: {
			title: string;
			subtitle: string;
			intro?: string;
			chronicle?: Array<
				{
					_key: string;
				} & ImageCard
			>;
		};
		visionSection: {
			title: string;
			subtitle: string;
			intro?: string;
			cta: string;
		};
		statsSection: {
			stats: Array<
				{
					_key: string;
				} & Stats
			>;
		};
		contactPersonsSection: {
			title: string;
			subtitle: string;
			intro?: string;
			contactPersons: Array<{
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				_key: string;
				[internalGroqTypeReferenceTo]?: 'person';
			}>;
		};
	};
};

export type Home = {
	_id: string;
	_type: 'home';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	content: {
		featureSection: {
			title: string;
			subtitle: string;
			intro?: string;
			features: Array<{
				title: string;
				intro: string;
				icon: string;
				_type: 'feature';
				_key: string;
			}>;
		};
		visionSection: {
			title: string;
			subtitle: string;
			intro?: string;
			cta: string;
		};
		groupsSection: {
			title: string;
			subtitle: string;
		};
		statsSection: {
			stats: Array<
				{
					_key: string;
				} & Stats
			>;
		};
		pricingSection: {
			title: string;
			subtitle: string;
			intro?: string;
			pricingYouth: {
				title: string;
				subtitle: string;
				intro?: string;
				price: number;
				benefitsTitle: string;
				benefits: Array<string>;
				cta: string;
			};
			pricingFamily: {
				title: string;
				subtitle: string;
				intro?: string;
				price: number;
				benefitsTitle: string;
				benefits: Array<string>;
				cta: string;
			};
			pricingAdult: {
				title: string;
				subtitle: string;
				intro?: string;
				price: number;
				benefitsTitle: string;
				benefits: Array<string>;
				cta: string;
			};
		};
		testimonialSection: {
			title: string;
			subtitle: string;
			testimonials: Array<{
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				_key: string;
				[internalGroqTypeReferenceTo]?: 'testimonial';
			}>;
		};
		contactPersonsSection: {
			title: string;
			subtitle: string;
			intro?: string;
			contactPersons: Array<{
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				_key: string;
				[internalGroqTypeReferenceTo]?: 'person';
			}>;
		};
		newsSection: {
			title: string;
			subtitle: string;
			intro?: string;
		};
	};
};

export type ImageCard = {
	_type: 'imageCard';
	title?: string;
	description?: string;
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt: string;
		_type: 'extendedImage';
	};
};

export type ExternalLink = {
	_type: 'externalLink';
	title?: string;
	url?: string;
};

export type ContactNameMail = {
	_type: 'contactNameMail';
	name: string;
	email: string;
};

export type Columns = {
	_type: 'columns';
	small?: '1' | '2' | '3' | '4';
	medium?: '1' | '2' | '3' | '4';
	large?: '1' | '2' | '3' | '4';
};

export type SiteSettings = {
	_id: string;
	_type: 'site-settings';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	meta?: MetaFields;
	metadataBase?: string;
	contact?: {
		address: string;
		phone: string;
		email: string;
	};
	newsletter?: {
		title: string;
		cta: string;
	};
	mainNavigation?: Array<
		| ({
				_key: string;
		  } & InternalLink)
		| ({
				_key: string;
		  } & ExternalLink)
	>;
	legalNavigation?: Array<
		{
			_key: string;
		} & InternalLink
	>;
	socialFields?: SocialFields;
};

export type SocialFields = {
	_type: 'socialFields';
	whatsapp?: string;
	facebook?: string;
	instagram?: string;
	youtube?: string;
};

export type Venue = {
	_id: string;
	_type: 'venue';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	description?: SimpleBlockContent;
	type?: 'hall-1' | 'hall-2' | 'hall-3' | 'cinder' | 'hybrid' | 'artificial-turf' | 'grass';
	location?: {
		name?: string;
		street?: string;
		houseNumber?: string;
		zipCode?: string;
		city?: string;
	};
};

export type Testimonial = {
	_id: string;
	_type: 'testimonial';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	firstName: string;
	lastName: string;
	image: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt: string;
		_type: 'extendedImage';
	};
	role: string;
	quote: string;
	showAlways?: boolean;
};

export type HonoraryMember = {
	_id: string;
	_type: 'honoraryMember';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	firstName: string;
	lastName: string;
	image: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt: string;
		_type: 'extendedImage';
	};
	memberSince?: string;
};

export type Person = {
	_id: string;
	_type: 'person';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	firstName: string;
	lastName: string;
	image: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt: string;
		_type: 'extendedImage';
	};
	email: string;
	phone?: string;
	affiliations?: Array<{
		department: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'group';
		};
		role: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'role';
		};
		taskDescription: string;
		description: string;
		_type: 'affiliation';
		_key: string;
	}>;
};

export type Role = {
	_id: string;
	_type: 'role';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	email?: string;
};

export type Group = {
	_id: string;
	_type: 'group';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title: string;
	email: string;
	description: SimpleBlockContent;
	isSportGroup?: boolean;
	icon: 'RiTeamLine' | 'RiLayoutColumnLine';
	image: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt: string;
		_type: 'extendedImage';
	};
};

export type SimpleBlockContent = {
	_type: 'simpleBlockContent';
	text?: Array<{
		children?: Array<{
			marks?: Array<string>;
			text?: string;
			_type: 'span';
			_key: string;
		}>;
		style?: 'normal';
		listItem?: 'bullet' | 'number';
		markDefs?: Array<{
			href?: string;
			_type: 'link';
			_key: string;
		}>;
		level?: number;
		_type: 'block';
		_key: string;
	}>;
};

export type NewsCategory = {
	_id: string;
	_type: 'news.category';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title: string;
	slug: Slug;
};

export type NewsArticle = {
	_id: string;
	_type: 'news.article';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title: string;
	slug: Slug;
	categories?: Array<{
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		_key: string;
		[internalGroqTypeReferenceTo]?: 'news.category';
	}>;
	author: {
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		[internalGroqTypeReferenceTo]?: 'author';
	};
	meta?: MetaFields;
	featuredImage: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt: string;
		_type: 'mainImage';
	};
	excerpt: string;
	body?: Array<
		| ({
				_key: string;
		  } & Grid)
		| {
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
				};
				hotspot?: SanityImageHotspot;
				crop?: SanityImageCrop;
				alt: string;
				_type: 'mainImage';
				_key: string;
		  }
		| ({
				_key: string;
		  } & SimpleBlockContent)
		| ({
				_key: string;
		  } & BlockContent)
		| ({
				_key: string;
		  } & Blockquote)
		| ({
				_key: string;
		  } & Spacer)
	>;
};

export type MainImage = {
	_type: 'mainImage';
	asset?: {
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
	};
	hotspot?: SanityImageHotspot;
	crop?: SanityImageCrop;
	alt: string;
};

export type SanityImageCrop = {
	_type: 'sanity.imageCrop';
	top?: number;
	bottom?: number;
	left?: number;
	right?: number;
};

export type SanityImageHotspot = {
	_type: 'sanity.imageHotspot';
	x?: number;
	y?: number;
	height?: number;
	width?: number;
};

export type SanityImageAsset = {
	_id: string;
	_type: 'sanity.imageAsset';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	originalFilename?: string;
	label?: string;
	title?: string;
	description?: string;
	altText?: string;
	sha1hash?: string;
	extension?: string;
	mimeType?: string;
	size?: number;
	assetId?: string;
	uploadId?: string;
	path?: string;
	url?: string;
	metadata?: SanityImageMetadata;
	source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
	_type: 'sanity.assetSourceData';
	name?: string;
	id?: string;
	url?: string;
};

export type SanityImageMetadata = {
	_type: 'sanity.imageMetadata';
	location?: Geopoint;
	dimensions?: SanityImageDimensions;
	palette?: SanityImagePalette;
	lqip?: string;
	blurHash?: string;
	hasAlpha?: boolean;
	isOpaque?: boolean;
};

export type MetaFields = {
	_type: 'metaFields';
	metaTitle?: string;
	metaDescription?: string;
	openGraphImage?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt?: string;
		_type: 'image';
	};
};

export type Author = {
	_id: string;
	_type: 'author';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	firstName: string;
	lastName: string;
	image: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt: string;
		_type: 'extendedImage';
	};
	email: string;
	jobTitle?: string;
};

export type ExtendedImage = {
	_type: 'extendedImage';
	asset?: {
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
	};
	hotspot?: SanityImageHotspot;
	crop?: SanityImageCrop;
	alt: string;
};

export type SanityAssistInstructionTask = {
	_type: 'sanity.assist.instructionTask';
	path?: string;
	instructionKey?: string;
	started?: string;
	updated?: string;
	info?: string;
};

export type SanityAssistTaskStatus = {
	_type: 'sanity.assist.task.status';
	tasks?: Array<
		{
			_key: string;
		} & SanityAssistInstructionTask
	>;
};

export type SanityAssistSchemaTypeAnnotations = {
	_type: 'sanity.assist.schemaType.annotations';
	title?: string;
	fields?: Array<
		{
			_key: string;
		} & SanityAssistSchemaTypeField
	>;
};

export type SanityAssistOutputType = {
	_type: 'sanity.assist.output.type';
	type?: string;
};

export type SanityAssistOutputField = {
	_type: 'sanity.assist.output.field';
	path?: string;
};

export type SanityAssistInstructionContext = {
	_type: 'sanity.assist.instruction.context';
	reference: {
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		[internalGroqTypeReferenceTo]?: 'assist.instruction.context';
	};
};

export type AssistInstructionContext = {
	_id: string;
	_type: 'assist.instruction.context';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	context?: Array<{
		children?: Array<{
			marks?: Array<string>;
			text?: string;
			_type: 'span';
			_key: string;
		}>;
		style?: 'normal';
		listItem?: never;
		markDefs?: null;
		level?: number;
		_type: 'block';
		_key: string;
	}>;
};

export type SanityAssistInstructionUserInput = {
	_type: 'sanity.assist.instruction.userInput';
	message: string;
	description?: string;
};

export type SanityAssistInstructionPrompt = Array<{
	children?: Array<
		| {
				marks?: Array<string>;
				text?: string;
				_type: 'span';
				_key: string;
		  }
		| ({
				_key: string;
		  } & SanityAssistInstructionFieldRef)
		| ({
				_key: string;
		  } & SanityAssistInstructionContext)
		| ({
				_key: string;
		  } & SanityAssistInstructionUserInput)
	>;
	style?: 'normal';
	listItem?: never;
	markDefs?: null;
	level?: number;
	_type: 'block';
	_key: string;
}>;

export type SanityAssistInstructionFieldRef = {
	_type: 'sanity.assist.instruction.fieldRef';
	path?: string;
};

export type SanityAssistInstruction = {
	_type: 'sanity.assist.instruction';
	prompt?: SanityAssistInstructionPrompt;
	icon?: string;
	title?: string;
	userId?: string;
	createdById?: string;
	output?: Array<
		| ({
				_key: string;
		  } & SanityAssistOutputField)
		| ({
				_key: string;
		  } & SanityAssistOutputType)
	>;
};

export type SanityAssistSchemaTypeField = {
	_type: 'sanity.assist.schemaType.field';
	path?: string;
	instructions?: Array<
		{
			_key: string;
		} & SanityAssistInstruction
	>;
};

export type MediaTag = {
	_id: string;
	_type: 'media.tag';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	name?: Slug;
};

export type Slug = {
	_type: 'slug';
	current: string;
	source?: string;
};

export type AllSanitySchemaTypes =
	| SanityImagePaletteSwatch
	| SanityImagePalette
	| SanityImageDimensions
	| SanityFileAsset
	| Geopoint
	| NewsArticlePage
	| Spacer
	| Grid
	| Blockquote
	| Stats
	| Link
	| InternalLink
	| SingleGroupPage
	| Privacy
	| BlockContent
	| NewsOverview
	| Membership
	| Imprint
	| GroupsPage
	| Contact
	| AboutUs
	| Home
	| ImageCard
	| ExternalLink
	| ContactNameMail
	| Columns
	| SiteSettings
	| SocialFields
	| Venue
	| Testimonial
	| HonoraryMember
	| Person
	| Role
	| Group
	| SimpleBlockContent
	| NewsCategory
	| NewsArticle
	| MainImage
	| SanityImageCrop
	| SanityImageHotspot
	| SanityImageAsset
	| SanityAssetSourceData
	| SanityImageMetadata
	| MetaFields
	| Author
	| ExtendedImage
	| SanityAssistInstructionTask
	| SanityAssistTaskStatus
	| SanityAssistSchemaTypeAnnotations
	| SanityAssistOutputType
	| SanityAssistOutputField
	| SanityAssistInstructionContext
	| AssistInstructionContext
	| SanityAssistInstructionUserInput
	| SanityAssistInstructionPrompt
	| SanityAssistInstructionFieldRef
	| SanityAssistInstruction
	| SanityAssistSchemaTypeField
	| MediaTag
	| Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/lib/sanity/queries/pages/home.ts
// Variable: getHomePage
// Query: *[_type == 'home'][0]
export type GetHomePageResult = {
	_id: string;
	_type: 'home';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	slug?: Slug;
	title: string;
	subtitle: string;
	intro?: string;
	meta?: MetaFields;
	content: {
		featureSection: {
			title: string;
			subtitle: string;
			intro?: string;
			features: Array<{
				title: string;
				intro: string;
				icon: string;
				_type: 'feature';
				_key: string;
			}>;
		};
		visionSection: {
			title: string;
			subtitle: string;
			intro?: string;
			cta: string;
		};
		groupsSection: {
			title: string;
			subtitle: string;
		};
		statsSection: {
			stats: Array<
				{
					_key: string;
				} & Stats
			>;
		};
		pricingSection: {
			title: string;
			subtitle: string;
			intro?: string;
			pricingYouth: {
				title: string;
				subtitle: string;
				intro?: string;
				price: number;
				benefitsTitle: string;
				benefits: Array<string>;
				cta: string;
			};
			pricingFamily: {
				title: string;
				subtitle: string;
				intro?: string;
				price: number;
				benefitsTitle: string;
				benefits: Array<string>;
				cta: string;
			};
			pricingAdult: {
				title: string;
				subtitle: string;
				intro?: string;
				price: number;
				benefitsTitle: string;
				benefits: Array<string>;
				cta: string;
			};
		};
		testimonialSection: {
			title: string;
			subtitle: string;
			testimonials: Array<{
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				_key: string;
				[internalGroqTypeReferenceTo]?: 'testimonial';
			}>;
		};
		contactPersonsSection: {
			title: string;
			subtitle: string;
			intro?: string;
			contactPersons: Array<{
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				_key: string;
				[internalGroqTypeReferenceTo]?: 'person';
			}>;
		};
		newsSection: {
			title: string;
			subtitle: string;
			intro?: string;
		};
	};
} | null;
// Variable: getHomePageGroups
// Query: *[_type == 'group'][] {		title,		icon	}
export type GetHomePageGroupsResult = Array<{
	title: string;
	icon: 'RiLayoutColumnLine' | 'RiTeamLine';
}>;
// Variable: getHomePageTestimonials
// Query: *[_type == 'home'][0] {		'values': content.testimonialSection.testimonials[0..2]-> {			firstName,			lastName,			image,			quote,			role,			showAlways,		},	}
export type GetHomePageTestimonialsResult = {
	values: Array<{
		firstName: string;
		lastName: string;
		image: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			alt: string;
			_type: 'extendedImage';
		};
		quote: string;
		role: string;
		showAlways: boolean | null;
	}>;
} | null;
// Variable: getHomePageContactPersons
// Query: *[_type == 'home'][0] {		'values': content.contactPersonsSection.contactPersons[]-> {			firstName,			lastName,			phone,			image,			"email": affiliations[department->title == 'Vorstand'][0].role->email,			"role": affiliations[department->title == 'Vorstand'][0].role->title,			"vision": affiliations[department->title == 'Vorstand'][0].description,		}	}
export type GetHomePageContactPersonsResult = {
	values: Array<{
		firstName: string;
		lastName: string;
		phone: string | null;
		image: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			alt: string;
			_type: 'extendedImage';
		};
		email: string | null;
		role: string | null;
		vision: string | null;
	}>;
} | null;
// Variable: getHomePageNews
// Query: *[_type == 'news.article'][0..2] {			title,			"slug": slug.current,			excerpt,			categories[]->{ title, "slug": slug.current },			featuredImage,			author->{ firstName, lastName, image },			_updatedAt,		} | order(_updatedAt desc)
export type GetHomePageNewsResult = Array<{
	title: string;
	slug: string;
	excerpt: string;
	categories: Array<{
		title: string;
		slug: string;
	}> | null;
	featuredImage: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt: string;
		_type: 'mainImage';
	};
	author: {
		firstName: string;
		lastName: string;
		image: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			alt: string;
			_type: 'extendedImage';
		};
	};
	_updatedAt: string;
}>;

// Query TypeMap
import '@sanity/client';
declare module '@sanity/client' {
	interface SanityQueries {
		"*[_type == 'home'][0]": GetHomePageResult;
		"\n\t*[_type == 'group'][] {\n\t\ttitle,\n\t\ticon\n\t}\n": GetHomePageGroupsResult;
		"\n\t*[_type == 'home'][0] {\n\t\t'values': content.testimonialSection.testimonials[0..2]-> {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\timage,\n\t\t\tquote,\n\t\t\trole,\n\t\t\tshowAlways,\n\t\t},\n\t}\n": GetHomePageTestimonialsResult;
		"\n\t*[_type == 'home'][0] {\n\t\t'values': content.contactPersonsSection.contactPersons[]-> {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\tphone,\n\t\t\timage,\n\t\t\t\"email\": affiliations[department->title == 'Vorstand'][0].role->email,\n\t\t\t\"role\": affiliations[department->title == 'Vorstand'][0].role->title,\n\t\t\t\"vision\": affiliations[department->title == 'Vorstand'][0].description,\n\t\t}\n\t}\n": GetHomePageContactPersonsResult;
		'\n\t*[_type == \'news.article\'][0..2] {\n\t\t\ttitle,\n\t\t\t"slug": slug.current,\n\t\t\texcerpt,\n\t\t\tcategories[]->{ title, "slug": slug.current },\n\t\t\tfeaturedImage,\n\t\t\tauthor->{ firstName, lastName, image },\n\t\t\t_updatedAt,\n\t\t} | order(_updatedAt desc)\n': GetHomePageNewsResult;
	}
}
